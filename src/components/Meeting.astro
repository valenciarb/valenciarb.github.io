---
import { getLangFromUrl, useTranslations } from '../i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const { date, title = "", location="", location_map="", posted="" } = Astro.props
const hasSponsors = Astro.slots.has("sponsors");

const dateOptions: Intl.DateTimeFormatOptions = {
  weekday: "long",
  year: "numeric",
  month: "long",
  day: "numeric"
};

const day = new Date(date).toLocaleDateString(lang, dateOptions);
const time = new Date(date).toTimeString().slice(0, 5);
---
<article class="meeting">
  <div class="columns">
    <div class="column">
    { title &&
      <h1 class="title is-size-4 has-text-weight-bold">
        <Fragment set:html={title}/>
      </h1>
    }
    <h2 class="subtitle is-size-6">
      <time datetime=`${day}`>{day} {t("at")} {time}</time>
    </h2>
    </div>
    <div class="column">
      <slot name="extras"/>
    </div>
  </div>
  <div class="content mt-3">
    <div class="columns">
      <div class="column is-7">
        <slot/>

        { hasSponsors?
          <aside class="notification my-6">
            <h2 class="subtitle is-size-5">{t("sponsors.event.thanks")}</h2>
            <div class="has-text-right">
              <slot name="sponsors"/>
            </div>
          </aside>
          : null
        }
      </div>
      <div class="column">
        { location &&
          <iframe src=`${location_map}` width="380" height="380" style="border:0;" allowfullscreen=""></iframe>
          <p class="has-text-centered is-size-7"><Fragment set:html={location}/></p>
        }
      </div>
    </div>
    { posted &&
      <aside class="is-size-7 has-text-right">Posted by {posted}</aside>
    }
  </div>
</article>
<hr>
